#import "./configurable-product.graphql"
#import "./simple-product.graphql"

enum ProductStatus {
  """
  Unpublished (hidden from catalog)
  """
  DRAFT

  """
  Published
  """
  ACTIVE

  """
  Deleted
  """
  DELETED
}

enum ProductVariationType {
  """
  Color Picker
  """
  COLOR

  """
  Text Answers
  """
  TEXT
}

type ProductPrice {
  _id: ID!
  isTaxable: Boolean!
  isNetPrice: Boolean!
  country: Country!
  price: Money!
  maxQuantity: Int
}

type ProductDiscount {
  _id: ID!
  interface: DiscountInterface
  total: Money!
}

type ProductMediaTexts {
  _id: ID!
  locale: String
  title: String
  subtitle: String
}

type ProductMedia {
  _id: ID!
  tags: [String!]
  file: Media!
  sortKey: Int!
  texts(forceLocale: String): ProductMediaTexts
}

type ProductVariationTexts {
  _id: ID!
  locale: String
  title: String
  subtitle: String
}

type ProductVariationOption {
  _id: ID!
  texts(forceLocale: String): ProductVariationTexts
  value: String
}

type ProductVariation {
  _id: ID!
  texts(forceLocale: String): ProductVariationTexts
  type: ProductVariationType
  key: String
  options: [ProductVariationOption!]
}

type ProductTexts {
  _id: ID!
  locale: String
  slug: String
  title: String
  subtitle: String
  description: String
  vendor: String
  labels: [String!]
}

"""
Abstract Product
"""
interface Product {
  _id: ID!
  sequence: Int!
  status: ProductStatus!
  tags: [String!]
  created: Date
  updated: Date
  published: Date
  texts: ProductTexts
}

"""
Visualization
"""
interface ProductVisualization {
  media: [ProductMedia!]
}

"""
Commerce
"""
interface ProductCommerce {
  catalogPrice(quantity: Int = 1): ProductPrice
  simulatedPrice(useNetPrice: Boolean = false, quantity: Int = 1): ProductPrice
  simulatedDiscounts: [ProductDiscount!]
}

"""
Supply
"""
interface ProductSupply {
  dimensions: Dimensions
  simulatedDispatches(deliveryProviderType: DeliveryProviderType = SHIPPING): [Dispatch!]
}

"""
Key Value Combination
"""
type ProductVariationAssignmentVector {
  _id: ID!
  variation: ProductVariation
  option: ProductVariationOption
}

"""
Key Value Combination to Product Assignment
"""
type ProductVariationAssignment {
  _id: ID!

  """
  Query string key=val&key=val ...
  """
  vectors: [ProductVariationAssignmentVector!]

  """
  Assigned Product
  """
  product: Product
}

"""
Variations (Proxy)
"""
interface ProductProxy {
  variations: [ProductVariation!]
  products(vectors: [ProductAssignmentVectorInput!]): [Product!]
  assignments: [ProductVariationAssignment!]!
}

"""
Warehousing
"""
interface ProductWarehousing {
  sku: String
  maxAllowedQuantityPerOrder: Int
  allowOrderingIfNoStock: Boolean
}

input ProductAssignmentVectorInput {
  key: String!
  value: String!
}
